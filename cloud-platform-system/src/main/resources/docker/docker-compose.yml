version: '3.8'

services:
  # MySQL服务
  mysql:
    image: mysql:8.0.39
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: MaXinHai!970923
      MYSQL_DATABASE: xxl_job  # 为xxl-job预创建数据库
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d  # 可选：如需自定义配置
    networks:
      - middleware-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pMaXinHai!970923"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL服务
  pgsql:
    image: postgres:17.6
    container_name: pgsql
    restart: always
    environment:
      POSTGRES_PASSWORD: MaXinHai!970923
      POSTGRES_DB: postgres
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - pgsql-data:/var/lib/postgresql/data
    networks:
      - middleware-network

  # Redis服务
  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    command: redis-server --requirepass MaXinHai!970923 --appendonly yes
    environment:
      TZ: Asia/Shanghai
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - middleware-network

  # RabbitMQ服务（带管理界面）
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: MaXinHai!970923
      TZ: Asia/Shanghai
    ports:
      - "5672:5672"    # 服务端口
      - "15672:15672"  # 管理界面端口
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - middleware-network

  # XXL-Job调度中心
  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.0
    container_name: xxl-job-admin
    restart: always
    environment:
      PARAMS: >
        --spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
        --spring.datasource.username=root
        --spring.datasource.password=MaXinHai!970923
        --xxl.job.accessToken=
        --server.port=8080
      TZ: Asia/Shanghai
    ports:
      - "8080:8080"
    volumes:
      - xxl-job-data:/opt/xxl-job-admin/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - middleware-network

  # Nacos服务（单例模式，不使用数据库）
  nacos:
    image: nacos/nacos-server:v2.2.0
    container_name: nacos
    restart: always
    environment:
      MODE: standalone
      NACOS_AUTH_ENABLE: 'true'
      NACOS_AUTH_TOKEN_SECRET_KEY: 'SecretKey012345678901234567890123456789012345678901234567890123456789'  # 至少32位
      NACOS_AUTH_USER_DEFAULT_PASSWORD: MaXinHai!970923  # 默认用户nacos的密码
      TZ: Asia/Shanghai
    ports:
      - "8848:8848"    # HTTP端口（外部访问）
      - "9848:9848"    # 客户端gRPC（外部客户端）
      - "9849:9849"    # 服务端gRPC（集群内）
      - "7848:7848"    # 集群通信（集群内）
    volumes:
      - nacos-data:/nacos/data
      - nacos-logs:/nacos/logs
    networks:
      - middleware-network

  # MongoDB服务
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MaXinHai!970923
      TZ: Asia/Shanghai
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - middleware-network

  # Elasticsearch服务
  elasticsearch:
    image: elasticsearch:7.14.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false  # 简化配置，如需密码可开启并配置
      - TZ=Asia/Shanghai
    ports:
      - "9200:9200"  # HTTP端口
      - "9300:9300"  # 集群通信端口
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - middleware-network

  # MinIO服务（对象存储）
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: MaXinHai!970923
      TZ: Asia/Shanghai
    ports:
      - "9000:9000"  # API端口
      - "9001:9001"  # 控制台端口
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - middleware-network

# 统一网络配置
networks:
  middleware-network:
    driver: bridge

# 数据卷配置（持久化存储）
volumes:
  mysql-data:
  pgsql-data:
  redis-data:
  rabbitmq-data:
  xxl-job-data:
  nacos-data:
  nacos-logs:
  mongodb-data:
  elasticsearch-data:
  minio-data: